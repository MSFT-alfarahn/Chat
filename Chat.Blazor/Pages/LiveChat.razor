@page "/chat"
@using Chat.Core;
@using System.ComponentModel
@implements IDisposable;
@inject ChatViewModel chatViewModel;


@foreach (var message in chatViewModel.Messages)
{
    <MudCard>
        <MudCardContent>
            <MudText Typo="Typo.body2">@message</MudText>  
        </MudCardContent>
    </MudCard>
    <br />
}


<MudTextField @bind-Value="chatViewModel.Name" Label="Name" Variant="Variant.Outlined"></MudTextField>
<MudTextField @bind-Value="chatViewModel.Message" Label="Message" Variant="Variant.Outlined"></MudTextField>
<br />
 <MudButton Variant="Variant.Filled" 
            EndIcon="@Icons.Material.Filled.Send" 
            OnClick="chatViewModel.Broadcast"
            Color="Color.Primary">Send</MudButton>

@code{
    protected override Task OnInitializedAsync()
    {
        chatViewModel.PropertyChanged += Notify;
        return base.OnInitializedAsync();
    }

    private void Notify(object? s, PropertyChangedEventArgs args)
        => StateHasChanged();

    public void Dispose()
    {
        chatViewModel.PropertyChanged -= Notify;
    }
}