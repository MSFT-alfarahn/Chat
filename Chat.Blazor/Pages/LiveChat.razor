@page "/"
@implements IAsyncDisposable
@using Microsoft.AspNetCore.SignalR.Client
@using System.Collections.ObjectModel
<div style="height:300px;overflow: auto;">
    @foreach (var message in messages)
    {
        <MudCard>
            <MudCardContent>
                <MudText Typo="Typo.body1" Color="Color.Primary">@message.name</MudText>
                <MudText Typo="Typo.body2">@message.message</MudText>
            </MudCardContent>
        </MudCard>
        <br />
    }
</div>

<div style="height:auto;overflow: auto;">
    <MudTextField @bind-Value="name" Label="Name" Variant="Variant.Outlined"></MudTextField>
    <MudTextField @bind-Value="message" Label="Message" Variant="Variant.Outlined"></MudTextField>
    <br />
    <MudButton Variant="Variant.Filled"
               FullWidth="true"
               OnClick="Broadcast"
               Color="Color.Primary">Send</MudButton>
</div>
@code {
    private HubConnection? hubConnection;
    private ObservableCollection<Message> messages = new();
    private string? name;
    private string? message;

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl("https://microsoft-chat.azurewebsites.net/chat")
            .Build();

        hubConnection.On<string, string>(nameof(Broadcast), (name, message) =>
        {
            messages.Insert(0, new Message(name, message));
            StateHasChanged();
        });

        await hubConnection.StartAsync();
    }

    private async void Broadcast()
    {
        await hubConnection.SendAsync(nameof(Broadcast), name, message);
        message = null;
    }

    public async ValueTask DisposeAsync()
    {
        await hubConnection.DisposeAsync();
    }

    public record Message(string name, string message);
}