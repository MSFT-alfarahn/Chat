@inherits LayoutComponentBase
@inject IJSRuntime JSRuntime

<MudThemeProvider Theme="_currentTheme" />
<MudDialogProvider />
<MudSnackbarProvider />

@if (_isLoggedIn)
{
    <MudLayout>
        <MudAppBar Elevation="0" Color="Color.Primary">
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
            <MudSpacer />
     
        </MudAppBar>
        <MudDrawer @bind-Open="_drawerOpen" Elevation="1">
            <MudDrawerHeader>
                <MudText Typo="Typo.h6"></MudText>
            </MudDrawerHeader>

        <MudNavMenu>
            <!--MudNavLink Href="" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">Home</MudNavLink-->
            <!--MudNavLink Href="counter" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Add">Counter</MudNavLink>
            <MudNavLink Href="fetchdata" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.List">Fetch data</MudNavLink-->
             <MudNavLink Href="" 
                         Match="NavLinkMatch.All" 
                         Icon="@Icons.Material.Filled.Home">Home</MudNavLink>
            <!--MudNavLink Href="profile" 
                        Match="NavLinkMatch.Prefix" 
                        Icon="@Icons.Material.Filled.VerifiedUser">Profile</MudNavLink-->
        </MudNavMenu>

            <MudContainer>
                <br/>
                <MudButton 
                    FullWidth="true"
                    Variant="Variant.Filled"
                    OnClick="LoginLogout"
                    Color="Color.Primary">Logout</MudButton>
            </MudContainer>
        </MudDrawer>
        <MudMainContent>
            <MudContainer MaxWidth="MaxWidth.Large" Class="my-2 pt-4">
                @Body
            </MudContainer>
        </MudMainContent>
    </MudLayout>
}
else
{

    <MudContainer MaxWidth="MaxWidth.Large" Class="my-2 pt-4">
            <MudTextField  @bind-Value="Password" 
                    Label="Username" Variant="Variant.Outlined" 
                    Adornment="Adornment.End" />
            <MudTextField  @bind-Value="Password" 
                            Label="Password" Variant="Variant.Outlined" 
                            InputType="@PasswordInput" Adornment="Adornment.End"
                            AdornmentIcon="@PasswordInputIcon"  
                            AdornmentAriaLabel="Show Password" />
        <br />
        <MudButton   
               FullWidth="true"
               Variant="Variant.Filled"
               OnClick="LoginLogout"
               Color="Color.Primary">Login</MudButton>
        <br />
        <br />
        <MudButton   
               FullWidth="true"
               Variant="Variant.Filled"
               OnClick="DeleteWASM"
               Color="Color.Primary">Delete WASM</MudButton>
    </MudContainer>
}

@code {
    bool _isLoggedIn;
    bool _drawerOpen = true;

    void DrawerToggle() => _drawerOpen = !_drawerOpen;
    void LoginLogout() => _isLoggedIn = !_isLoggedIn;  
    async Task DeleteWASM() => await JSRuntime.InvokeVoidAsync(nameof(DeleteWASM));
    

    public string Password { get; set;}

    bool isShow;
    InputType PasswordInput = InputType.Password;
    string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;

    private MudTheme _currentTheme => 
       new MudTheme
       {
           Palette = new Palette()
           {
             //  Surface = "#ff0000",
               Primary = "#512BD4",
            //   InfoContrastText = "#0000ff",
           }
       };

}