@inherits LayoutComponentBase
@inject IJSRuntime JSRuntime

<MudThemeProvider Theme="_currentTheme" />
<MudDialogProvider />
<MudSnackbarProvider />

@if (_isLoggedIn)
{
    <MudLayout
        >
        <MudAppBar Elevation="0" Color="Color.Primary">
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />

            <p style="font-size:40px;color:white;text-align:center; width: 100%">Home</p>
        </MudAppBar>
        <MudDrawer @bind-Open="_drawerOpen" Elevation="1">
            <MudDrawerHeader>
                <MudText Typo="Typo.h6"></MudText>
            </MudDrawerHeader>

            <MudNavMenu>
                <!--MudNavLink Href="" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">Home</MudNavLink-->
                <!--MudNavLink Href="counter" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Add">Counter</MudNavLink>
                <MudNavLink Href="fetchdata" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.List">Fetch data</MudNavLink-->
                <MudNavLink Href=""
                        Match="NavLinkMatch.All"
                        Style="font-size:40px;"
                        Icon="@Icons.Material.Filled.Home">Home</MudNavLink>
                <!--MudNavLink Href="profile"
                            Match="NavLinkMatch.Prefix"
                            Icon="@Icons.Material.Filled.VerifiedUser">Profile</MudNavLink-->
            </MudNavMenu>

            <MudContainer>
                <br />
                <MudButton FullWidth="true"
                       Variant="Variant.Filled"
                       OnClick="LoginLogout"
                       Style="font-size:40px;"
                       Color="Color.Primary">Logout</MudButton>
            </MudContainer>
        </MudDrawer>
        <MudMainContent>
            <MudContainer MaxWidth="MaxWidth.Large" Class="my-2 pt-4">
                @Body
            </MudContainer>
        </MudMainContent>
    </MudLayout>
}
else
{

    <MudContainer 
        Style="background-color:#304ffe;height:100vh;"  
        MaxWidth="MaxWidth.Large" Class="my-2 pt-4">
        <p style="font-size:200px;color:white;text-align:center">.NET</p>
        <MudButton FullWidth="true"
               Variant="Variant.Filled"
               OnClick="LoginLogout"
               Style="font-size:40px;border: 2px solid white;bottom:-200px;"
               Color="Color.Primary">Login</MudButton>
    </MudContainer>
}

@code {
    bool _isLoggedIn;
    bool _drawerOpen = true;

    void DrawerToggle() => _drawerOpen = !_drawerOpen;
    async void LoginLogout(){ 
        if(_isLoggedIn)
         await JSRuntime.InvokeVoidAsync("DeleteWASM");
        _isLoggedIn = !_isLoggedIn;
    }


    public string Password { get; set; }

    bool isShow;
    InputType PasswordInput = InputType.Password;
    string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;

    private MudTheme _currentTheme =>
       new MudTheme
           {
               Palette = new Palette()
               {
               //  Surface = "#ff0000",
                   Primary = "#304ffe",
               //   InfoContrastText = "#0000ff",
               },
               Typography = new Typography()
               {
                   Default = new Default()
                   {
                       FontFamily = new[] { "junegull" },
                   }
               }
           };

}